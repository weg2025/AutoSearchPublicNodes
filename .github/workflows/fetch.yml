name: Fetch

on:
  workflow_dispatch:
  schedule:
    - cron: '10 7 * * *'
  push:
    paths:
      - 'sources.list'
      - 'config.yml'
      - 'abpwhite.txt'
      - '.github/workflows/**'
      - '**.py'
      - 'snippets/_*'

jobs:
  fetch:
    runs-on: ubuntu-latest
    steps:
    - name: 迁出代码
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.ACCESS_TOKEN }}
        
    - name: 设置时区
      run: sudo timedatectl set-timezone 'Asia/Shanghai'
      
    - name: 安装 Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'
        cache: 'pip'
        
    - name: 安装依赖
      run: pip install -r requirements.txt
      
    - name: 执行任务
      run: python ./fetch.py
      
    - name: 提交更改
      id: commit
      run: |
        git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add list*
        git add snippets/
        if git diff --staged --quiet; then
          echo "NO_CHANGES=true" >> $GITHUB_OUTPUT
          echo "没有更改需要提交"
        else
          git commit -m "$(date '+%Y-%m-%d %H:%M:%S') 抓取节点"
          echo "NO_CHANGES=false" >> $GITHUB_OUTPUT
        fi
        # 保存当前状态
        git stash push --include-untracked || true
        git pull --rebase origin main
        if [ "$(git stash list)" ]; then
          git stash pop
        fi
        
    - name: 推送更改
      if: steps.commit.outputs.NO_CHANGES == 'false'
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.ACCESS_TOKEN }}
        branch: main
        
    - name: 计算要清除缓存的文件
      id: purge_urls
      run: |
        sleep 5
        baseUrl="https://cdn.jsdelivr.net/gh/${{ github.repository }}@master"
        urls=""
        for f in `find snippets -name "*.yml" -type f`; do
          urls+="${baseUrl}/${f},"
        done
        for f in `find . -name "list*" -type f -maxdepth 1`; do
          urls+="${baseUrl}/${f},"
        done
        echo "urls=${urls%,*}" >> $GITHUB_OUTPUT
        
    - name: 清除 JsDelivr CDN 缓存
      uses: egad13/purge-jsdelivr-cache@v1
      with:
        url: ${{ steps.purge_urls.outputs.urls }}
      continue-on-error: true
